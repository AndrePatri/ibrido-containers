Bootstrap: docker
From:nvcr.io/nvidia/isaac-sim:4.2.0

%labels
    AUTHOR AndrePatri (andrepatrics@gmail.com)
    Version v0.2.0

%help
    This is the Singularity container associated with the IBRIDO framework.

#%arguments
#    wandb_key=""

%files # copy isaac kits
    ./files/omni.isaac.sim.python.aug_mpc_envs.headless.kit /isaac-sim/apps/
    ./files/omni.isaac.sim.python.aug_mpc_envs.kit /isaac-sim/apps
    ./files/nucleus4.0.0.py /isaac-sim/exts/omni.isaac.nucleus/omni/isaac/nucleus/nucleus.py

%environment
    
    export DEBIAN_FRONTEND=noninteractive
    export LANG=C.UTF-8
    export LC_ALL=C.UTF-8
    export ROS_DISTRO=humble
    export ACCEPT_EULA=Y
    export force_color_prompt=Y
    export WANDB_KEY=""
    export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:/.singularity.d/libs
#    export SINGULARITY_MEMORY=
#    export SINGULARITY_MEMORY_SWAP=

#%setup

%post
    # writing some composite singularity env. variables
    HOME='/root'
    MAMBA_ENV_NAME='ibrido'
    MAMBA_EXE_PREFIX='/usr/local/bin'
    MAMBA_EXE='${MAMBA_EXE_PREFIX}/micromamba'
    MAMBA_ROOT_PREFIX='/opt/conda'
    MAMBA_ENV_FPATH='${HOME}/ibrido_files/mamba_env.yml'

    PATH=$PATH:${HOME}/.local/bin:${HOME}/ibrido_utils:${HOME}/ibrido_files

    echo "export HOME=\"${HOME}\"" >> $SINGULARITY_ENVIRONMENT
    echo "export MAMBA_ENV_NAME=\"${MAMBA_ENV_NAME}\"" >> $SINGULARITY_ENVIRONMENT
    echo "export MAMBA_ENV_FPATH=\"${MAMBA_ENV_FPATH}\"" >> $SINGULARITY_ENVIRONMENT
    echo "export PATH=\"${PATH}\"" >> $SINGULARITY_ENVIRONMENT
    echo "export MAMBA_EXE_PREFIX=\"${MAMBA_EXE_PREFIX}\"" >> $SINGULARITY_ENVIRONMENT
    echo "export MAMBA_EXE=\"${MAMBA_EXE}\"" >> $SINGULARITY_ENVIRONMENT
    echo "export MAMBA_ROOT_PREFIX=\"${MAMBA_ROOT_PREFIX}\"" >> $SINGULARITY_ENVIRONMENT

    apt-get update && apt-get install -y \
        ca-certificates python3 python3-venv python-is-python3 \
        git wget sudo vim iputils-ping ssh rsync \
        plocate \
        libgl1-mesa-glx libglx0 libglew-dev libglfw3 libglfw3-dev mesa-utils\
        libboost-all-dev \
        dirmngr gnupg2 \
        build-essential \
        valgrind \
        byobu \
        wget \
        htop \
        nvtop \
        apt-utils \
        software-properties-common \
        nano \
        cmake \
        cmake-curses-gui \
        curl \
        swig \
        ffmpeg && rm -rf /var/lib/apt/lists/*

    apt-get update && DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get -y install tzdata && rm -rf /var/lib/apt/lists/*

    # Micromamba setup
    curl -Ls https://micromamba.snakepit.net/api/micromamba/linux-64/latest | tar -xvj -C ${MAMBA_EXE_PREFIX}/ --strip-components=1 bin/micromamba
    
    # ROS 2 base setup
    echo 'Etc/UTC' > /etc/timezone
    apt-get update && apt-get install -q -y --no-install-recommends tzdata && rm -rf /var/lib/apt/lists/*

    apt-get update && apt-get install -q -y --no-install-recommends \
        dirmngr \
        gnupg2 && rm -rf /var/lib/apt/lists/*

    set -eux; \
        key='C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654'; \
        export GNUPGHOME="$(mktemp -d)"; \
        gpg --batch --keyserver hkps://keyserver.ubuntu.com --recv-keys "$key"; \
        mkdir -p /usr/share/keyrings; \
        gpg --batch --export "$key" > /usr/share/keyrings/ros2-latest-archive-keyring.gpg; \
        gpgconf --kill all; \
        rm -rf "$GNUPGHOME"

    echo "deb [ signed-by=/usr/share/keyrings/ros2-latest-archive-keyring.gpg ] http://packages.ros.org/ros2/ubuntu jammy main" > /etc/apt/sources.list.d/ros2-latest.list

    apt-get update && apt-get install --no-install-recommends -y \
        build-essential \
        git \
        python3-colcon-common-extensions \
        python3-colcon-mixin \
        python3-rosdep \
        python3-vcstool && rm -rf /var/lib/apt/lists/*

    ROS_DISTRO='humble'
    rosdep init && \
      rosdep update --rosdistro $ROS_DISTRO

    colcon mixin add default \
        https://raw.githubusercontent.com/colcon/colcon-mixin-repository/master/index.yaml && \
      colcon mixin update && \
      colcon metadata add default \
        https://raw.githubusercontent.com/colcon/colcon-metadata-repository/master/index.yaml && \
      colcon metadata update

    apt-get update && apt-get install -y --no-install-recommends \
        ros-humble-ros-base \
        ros-humble-rviz2 && rm -rf /var/lib/apt/lists/*

    # give access to /isaac-sim folder to anybody (root only by default)
    chmod --recursive 777 /isaac-sim

%test
    echo 'Testing if MicroMamba is present...'
    ${MAMBA_EXE} --version

%runscript
    exec /bin/bash "$@"

%startscript
    exec /bin/bash "$@"
